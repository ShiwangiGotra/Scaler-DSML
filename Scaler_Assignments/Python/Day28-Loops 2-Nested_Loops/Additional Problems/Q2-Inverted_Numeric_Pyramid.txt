Q2. Inverted Numeric Pyramid

Problem Description

Take an integer N as input, print the corresponding Numeric Inverted Half Pyramid pattern for N.

For example if N = 4 then pattern will be like:

1 2 3 4
1 2 3
1 2
1

Problem Constraints

1 <= N <= 100



Input Format

First and only line of input contains a single integer N.



Output Format

Output the Numeric Inverted Half Pyramid pattern corresponding to the given N.

NOTE: There should be no extra spaces after last integer and before first integer in any . All integers in any row in the pattern are separated by a single space.


Example Input

Input 1:
 2

Input 2:
 3

Example Output

Output 1:
1 2
1

Output 2:
1 2 3
1 2
1

Example Explanation

 Example Input 1
 We have the input of integer as 2. So there will be 2 rows. 
 The first row will have 2 integers separated by a single space (1 2)
 The next row will have 2-1 = 1 integer (1)
 As we do not have any more integers left we stop printing the pattern.

 Example Input 2
 We have the input of integer as 3. So there will be 3 rows. 
 The first row will have 3 integers separated by a single space (1 2 3)
 The next row will have 3-1 = 2 integers separated by a single space (1 2)
 The next row will have 2-1 = 1 integer.(1)
 As we do not have any more integers left we stop printing the pattern.

Solution:
N = int(input())
for i in range(N, 0, -1):
    for j in range(1, i + 1):
        if j != i:
            print(j,end=" ")
        else:
            print(j)       
    