Q3. Ceil and Floor

Problem Description

You are given a list of numbers (sorted in ascending order) A and an integer B.

You need to return a list of size 2, where the first element is the ceil of B and the second element is the floor of B.

The first element (Ceil of B) is the smallest number from the list that is greater than or equal to B.
The second element (Floor of B) is the largest number from the list that is smaller than or equal to B.
Note:

The list A and the integer B are already passed as an argument to the function. User don't need to take any input.
Just perform the task on the passed arguments and return the required result.
Problem Constraints

1 <= |A| <= 105 -109 <= A[i] <= 109 -109 <= B <= 109
Input Format

The input contains two lines:

The first line is a list of space-separated integers where the first number indicates how many elements follow.
The second line contains a single integer.
Output Format

Return a list C of size 2:

The first integer is the ceil of B.
The second integer is the floor of B.
Example Input
Input 1:
[-2, 4, 4, 8, 9]
0
Input 2:
[1, 3, 9, 21]
9
Example Output

Output 1:
[4, -2]
Output 2:
[9, 9]
Example Explanation

Explanation 1:
Just greater or equal element than 0 in A is 4
Just smaller or equal element than 0 is A is -2
Explanation 2: Ceil and floor of 9 will be 9 itself as 9 is present in the list.

Solution:

# def solve(A,B):
#     Your Code Goes Here
#     ceil = None
#     floor = None

#     for num in A:
#         if num >= B and ceil is None:
#             ceil = num
#         if num <= B:
#             floor = num

#     return [ceil, floor]

def solve(A,B):
  ceil = None
  floor = None
  left = 0
  right = len(A)-1
  
  while left <= right:
    mid = (left + right)//2
    if B == A[mid]:
      ceil = A[mid]
      floor = A[mid]
      break
    elif A[mid] > B:
      ceil = A[mid]
      right = mid - 1
    elif A[mid] < B:
      floor = A[mid]
      left = mid + 1
  return [ceil,floor]