Q4. Matrix Transpose II

Problem Description

Given a 2D integer array A, return the transpose of A.

The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.
Note: The 2D integer array A is already passed as an argument to the function. User don't need to take any input. Just perform the task on the passed arguments and return the required result.


Problem Constraints

1 <= A.size() <= 1000

1 <= A[i].size() <= 1000

1 <= A[i][j] <= 100

Input Format

First argument is a 2D matrix of integers.

Output Format

You have to return the Transpose of this 2D matrix.


Example Input

Input 1:
A = [[1, 2, 3],[4, 5, 6],[7, 8, 9]]

Input 2:
A = [[1, 2],[1, 2],[1, 2]]

Example Output

Output 1:
[[1, 4, 7], [2, 5, 8], [3, 6, 9]]

Output 2:
[[1, 1, 1], [2, 2, 2]]

Example Explanation

Explanation 1:

Clearly after converting rows to column and columns to rows of [[1, 2, 3],[4, 5, 6],[7, 8, 9]]
 we will get [[1, 4, 7], [2, 5, 8], [3, 6, 9]].
Explanation 2:

After transposing the matrix, A becomes [[1, 1, 1], [2, 2, 2]]

Solution:

def transpose(A):
    row = len(A)
    col = len(A[0])
    new_arr = []
    for i in range(col):
        new_arr.append([])
    for i in range(row):
        for j in range (col):
            new_arr[j].append(A[i][j])
    return new_arr